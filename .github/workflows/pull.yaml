name: "Pull"

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pull:
    name: "Pull"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      pull-requests: write

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        #with:
        #  fetch-depth: 0

      #- name: "Get Commit Message"
      #  id: commit
      #  continue-on-error: true
      #  run: |
      #    echo "message=$(git show -s --format=%s ${{ github.event.pull_request.head.sha }})" >> "${GITHUB_OUTPUT}"

      #- name: "Get Commit Message v1"
      #  id: commit
      #  continue-on-error: true
      #  env:
      #    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #    REF: ${{ github.event.pull_request.head.sha }}
      #  run: |
      #    echo message=$(gh api "/repos/${GITHUB_REPOSITORY}/commits/${REF}" \
      #      -H "Accept: application/vnd.github+json" \
      #      -H "X-GitHub-Api-Version: 2022-11-28" \
      #      --jq '.commit.message') >> "${GITHUB_OUTPUT}"

      - name: "Get Commit Message v2"
        id: commit
        continue-on-error: true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REF: ${{ github.event.pull_request.head.sha }}
        run: |
          echo "url: /repos/${GITHUB_REPOSITORY}/commits/${REF}"
          commit=$(gh api "/repos/${GITHUB_REPOSITORY}/commits/${REF}" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            --jq '.commit')
          echo "commit: ${commit}"
          message=$(echo "{commit}" | jq -r '.message')
          echo "message: ${message}"
          echo "message=${message}" >> "${GITHUB_OUTPUT}"
          echo "::group::Commit - ${REF}"
          echo "{commit}"
          echo "::endgroup::"

      - name: "Debug"
        #continue-on-error: true
        run: |
          #echo "::group::Event JSON"
          #cat "${GITHUB_EVENT_PATH}"
          #echo "::endgroup::"

          echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"

          echo "head.sha: ${{ github.event.pull_request.head.sha }}"
          echo "GITHUB_SHA: ${GITHUB_SHA}"
          echo "outputs.message: ${{ steps.commit.outputs.message }}"

      - name: "ChatGPT CodeReview DEBUG"
        if: ${{ contains(steps.commit.outputs.message, '#gpt') }}
        run: echo yes

      #- name: "NPM Outdated Check"
      #  continue-on-error: true
      #  uses: cssnr/npm-outdated-action@master

      #- name: "Spell Check Repo"
      #  continue-on-error: true
      #  uses: crate-ci/typos@v1.30.2
      #  env:
      #    CLICOLOR: 1
      #  with:
      #    files: ./README.md

      #- name: "ChatGPT CodeReview"
      #  if: ${{ contains(steps.commit.outputs.message, '#gpt') }}
      #  continue-on-error: true
      #  uses: anc95/ChatGPT-CodeReview@main
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #    OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      #    LANGUAGE: English
      #    OPENAI_API_ENDPOINT: https://api.openai.com/v1
      #    MODEL: gpt-4o-mini
      #    PROMPT: "Please check the following code diff for errors and improvements."
      #    top_p: 1
      #    temperature: 1
      #    max_tokens: 10000
      #    MAX_PATCH_LENGTH: 10000
      #    IGNORE_PATTERNS: "/node_modules/**,/dist/**"
      #    INCLUDE_PATTERNS: "/src/**,**/*.yaml"
